function plot_bat_mic_vector()
% Plot bat track and various vectors on view track GUI

if isappdata(0,'track_gui_handles')
    % load data and GUI handle
    data = getappdata(0,'data');
    gui_op = getappdata(0,'gui_op');
    track_gui_handles = getappdata(0,'track_gui_handles');

    call_loc_on_track_idx_all = data.track.call_loc_idx_on_track_interp;  % call emission location in terms of idx of interpolated track
    bat_loc_at_call = data.proc.bat_loc_at_call(gui_op.current_call_idx,:);
    bat_loc_at_call_rep = repmat(bat_loc_at_call,size(data.mic_loc,1),1);
    mic_to_bat_vec = squeeze(data.proc.mic_to_bat_vec(gui_op.current_call_idx,:,:));
    bat_headaim = data.head_aim.head_aim_int(call_loc_on_track_idx_all(gui_op.current_call_idx),:);
    bat_headnorm = data.head_normal.head_normal_int(call_loc_on_track_idx_all(gui_op.current_call_idx),:);
    bat_rr = cross(bat_headaim,bat_headnorm);

    % plot
    axes(track_gui_handles.axes2);
    corder = get(gca,'colororder');  % get line colors
    set(track_gui_handles.h_curr_call,...
        'Xdata',data.track.track_interp(data.track.call_loc_idx_on_track_interp(gui_op.current_call_idx),1),...
        'Ydata',data.track.track_interp(data.track.call_loc_idx_on_track_interp(gui_op.current_call_idx),2),...
        'Zdata',data.track.track_interp(data.track.call_loc_idx_on_track_interp(gui_op.current_call_idx),3));
    if isfield(track_gui_handles,'h_mic_to_bat_v')  % mic to bat vector
        set(track_gui_handles.h_mic_to_bat_v,...
            'XData',bat_loc_at_call_rep(:,1),...
            'YData',bat_loc_at_call_rep(:,2),...
            'ZData',bat_loc_at_call_rep(:,3),...
            'UData',mic_to_bat_vec(:,1)/2,...
            'VData',mic_to_bat_vec(:,2)/2,...
            'WData',mic_to_bat_vec(:,3)/2);
    else
        h_mic_to_bat_v = quiver3(bat_loc_at_call_rep(:,1),bat_loc_at_call_rep(:,2),bat_loc_at_call_rep(:,3),...
            mic_to_bat_vec(:,1)/2,mic_to_bat_vec(:,2)/2,mic_to_bat_vec(:,3)/2,'color',corder(5,:));
        track_gui_handles.h_mic_to_bat_v = h_mic_to_bat_v;
    end
    if isfield(track_gui_handles,'h_bat_aim_v')  % bat head aim
        set(track_gui_handles.h_bat_aim_v,...
            'XData',bat_loc_at_call(1),...
            'YData',bat_loc_at_call(2),...
            'ZData',bat_loc_at_call(3),...
            'UData',bat_headaim(:,1)*2,...
            'VData',bat_headaim(:,2)*2,...
            'WData',bat_headaim(:,3)*2);
    else
        h_bat_aim_v = quiver3(bat_loc_at_call(1),bat_loc_at_call(2),bat_loc_at_call(3),...
            bat_headaim(1)*2,bat_headaim(2)*2,bat_headaim(3)*2,'linewidth',2,'color',corder(2,:));
        track_gui_handles.h_bat_aim_v = h_bat_aim_v;
    end
    if isfield(track_gui_handles,'h_bat_norm_v')  % bat head normal vector
        set(track_gui_handles.h_bat_norm_v,...
            'XData',bat_loc_at_call(1),...
            'YData',bat_loc_at_call(2),...
            'ZData',bat_loc_at_call(3),...
            'UData',bat_headnorm(:,1)*2,...
            'VData',bat_headnorm(:,2)*2,...
            'WData',bat_headnorm(:,3)*2);
    else
        h_bat_norm_v = quiver3(bat_loc_at_call(1),bat_loc_at_call(2),bat_loc_at_call(3),...
            bat_headnorm(1)*2,bat_headnorm(2)*2,bat_headnorm(3)*2,'linewidth',2,'color',corder(3,:));
        track_gui_handles.h_bat_norm_v = h_bat_norm_v;
    end
    if isfield(track_gui_handles,'h_bat_rr_v')  % vector to the right of the bat
        set(track_gui_handles.h_bat_rr_v,...
            'XData',bat_loc_at_call(1),...
            'YData',bat_loc_at_call(2),...
            'ZData',bat_loc_at_call(3),...
            'UData',bat_rr(:,1)*2,...
            'VData',bat_rr(:,2)*2,...
            'WData',bat_rr(:,3)*2);
    else
        h_bat_rr_v = quiver3(bat_loc_at_call(1),bat_loc_at_call(2),bat_loc_at_call(3),...
            bat_rr(1)*2,bat_rr(2)*2,bat_rr(3)*2,'linewidth',2,'color',corder(4,:));
        track_gui_handles.h_bat_rr_v = h_bat_rr_v;
    end
    setappdata(0,'track_gui_handles',track_gui_handles);
end